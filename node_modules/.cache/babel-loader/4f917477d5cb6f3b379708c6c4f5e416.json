{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D7\\u05DE\\u05D0\\u05D3\\u05D4\\\\Desktop\\\\Lotus\\\\Reef\\\\Reef-Resturant\\\\src\\\\component\\\\pages\\\\management\\\\content\\\\vendor\\\\vendorTable.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TableVendor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orgData: {},\n      editObj: {},\n      selectedRows: [],\n      hover: false,\n      show: false,\n      showEdit: false,\n      onHide: () => this.setState({\n        show: false\n      }),\n      toAdd: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleEditInputChange = this.handleEditInputChange.bind(this);\n    this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\n  }\n\n  handleTableCheck(rowIndex, checked) {\n    if (checked) {\n      this.state.selectedRows.push(rowIndex);\n    } else {\n      this.state.selectedRows.pop(rowIndex);\n    }\n  }\n\n  handleTableDelete() {\n    fetch('/management', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"ids\": this.state.selectedRows\n      })\n    }).then(() => {\n      const data = this.state.data.filter(item => this.state.selectedRows.indexOf(item.id) === -1);\n      this.setState({\n        \"selectedRows\": [],\n        data\n      });\n    });\n  }\n\n  getCheckBox(id) {\n    if (this.state.selectedRows.indexOf(id) === -1) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: id,\n        onClick: event => this.handleTableCheck(id, event.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      checked: true,\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: id,\n      onClick: event => this.handleTableCheck(id, event.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const id = target.id;\n    let toAdd = this.state.toAdd;\n    toAdd[id] = value;\n    this.setState({\n      toAdd\n    });\n  }\n\n  handleEditInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const id = target.id;\n    let editObj = this.state.editObj;\n    editObj[id] = value;\n    this.setState({\n      editObj\n    });\n  }\n\n  handleSearchInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleUpdateItem() {\n    let editObj = this.state.editObj;\n    fetch('/management', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'editObj': this.state.editObj,\n        'ids': this.state.selectedRows\n      })\n    }).then(res => {\n      let data = this.state.data;\n      data.forEach(item => {\n        if (this.state.selectedRows.indexOf(item.id) !== -1) {\n          this.props.data.headers.forEach(key => {\n            if (key.nameInDB !== 'id') {\n              item[key.nameInDB] = editObj[key.nameInDB];\n            }\n          });\n        }\n      });\n      this.setState({\n        show: false,\n        editObj: {},\n        data,\n        selectedRows: []\n      });\n    });\n  }\n\n  handleAddItem() {\n    let toAdd = this.state.toAdd;\n    fetch('/management', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.toAdd)\n    }).then(res => res.json()).then(json => {\n      let data = this.state.data;\n      toAdd['id'] = json.id;\n      data.push(toAdd);\n      this.setState({\n        show: false,\n        toAdd: {},\n        data\n      });\n    });\n  }\n\n  openEditModal() {\n    if (this.state.selectedRows.length === 0) return;\n    const firstSelectedRow = this.state.selectedRows[0];\n    let editObj;\n    this.state.data.forEach(item => {\n      if (item.id === firstSelectedRow) {\n        editObj = item;\n      }\n    });\n    this.state.editObj = editObj;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      id: \"modal\",\n      show: this.state.showEdit,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        onHide: () => this.setState({\n          showEdit: false,\n          selectedRows: []\n        }),\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: this.props.data.headers.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: item.nameInDB,\n              children: item.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: item.type,\n              class: \"form-control\",\n              id: item.nameInDB,\n              placeholder: item.key,\n              onChange: this.handleEditInputChange,\n              value: this.state.editObj[item.nameInDB]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, item.nameInDB, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.handleUpdateItem(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  openAddModal() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      id: \"modal\",\n      ...this.state,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: this.props.data.headers.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: item.nameInDB,\n              children: item.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: item.type,\n              class: \"form-control\",\n              id: item.nameInDB,\n              placeholder: item.key,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, item.nameInDB, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.handleAddItem(),\n          children: \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  } // toggleHover() {\n  //   this.setState({ hover: !this.state.hover })\n  // }\n\n\n  clearFilter() {\n    this.setState({\n      data: this.state.orgData\n    });\n  }\n\n  filterData() {\n    const key = this.state.searchIn;\n    const text = this.state.search;\n\n    if (!key || !text) {\n      return;\n    }\n\n    const data = [];\n    this.state.orgData.forEach(item => {\n      if (item[key].indexOf(text) !== -1) {\n        data.push(item);\n      }\n    });\n    this.setState({\n      data\n    });\n  }\n\n  render() {\n    if (!this.state.data) {\n      this.setState({\n        data: this.props.data.data,\n        orgData: this.props.data.data,\n        searchIn: this.props.data.headers[0].nameInDB\n      });\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"form-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleSearchInputChange,\n            type: \"text\",\n            name: \"search\",\n            class: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleSearchInputChange,\n            name: \"searchIn\",\n            class: \"form-control mb-2 mr-sm-2\",\n            id: \"exampleFormControlSelect1\",\n            children: this.props.data.headers.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.nameInDB,\n                children: item.key\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary mr-sm-2\",\n            onClick: () => this.filterData(),\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger mr-sm-2\",\n            onClick: () => this.clearFilter(),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger table-button\",\n        onClick: () => this.handleTableDelete(),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary table-button\",\n        onClick: () => {\n          this.setState({\n            showEdit: true\n          });\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success table-button\",\n        onClick: () => {\n          this.setState({\n            show: true\n          });\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), this.props.data.headers.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                children: item.key\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.data.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  onMouseEnter: this.toggleHover,\n                  onMouseLeave: this.toggleHover,\n                  children: this.getCheckBox(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), this.props.data.headers.map(header => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item[header.nameInDB]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), this.openAddModal(), this.openEditModal()]\n    }, void 0, true);\n  }\n\n}\n\nexport default TableVendor;","map":{"version":3,"sources":["C:/Users/חמאדה/Desktop/Lotus/Reef/Reef-Resturant/src/component/pages/management/content/vendor/vendorTable.js"],"names":["React","Table","Button","Modal","TableVendor","Component","constructor","state","orgData","editObj","selectedRows","hover","show","showEdit","onHide","setState","toAdd","handleInputChange","bind","handleEditInputChange","handleSearchInputChange","handleTableCheck","rowIndex","checked","push","pop","handleTableDelete","fetch","method","headers","body","JSON","stringify","then","data","filter","item","indexOf","id","getCheckBox","event","target","value","type","name","handleUpdateItem","res","forEach","props","key","nameInDB","handleAddItem","json","openEditModal","length","firstSelectedRow","map","openAddModal","clearFilter","filterData","searchIn","text","search","render","toggleHover","header"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nclass TableVendor extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { orgData: {}, editObj: {}, selectedRows: [], hover: false, show: false, showEdit: false, onHide: () => this.setState({ show: false }), toAdd: {} };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleEditInputChange = this.handleEditInputChange.bind(this);\r\n    this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\r\n  }\r\n\r\n  handleTableCheck(rowIndex, checked) {\r\n    if (checked) {\r\n      this.state.selectedRows.push(rowIndex);\r\n    } else {\r\n      this.state.selectedRows.pop(rowIndex);\r\n    }\r\n  }\r\n\r\n  handleTableDelete() {\r\n    fetch('/management',\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"ids\": this.state.selectedRows })\r\n      })\r\n      .then(() => {\r\n        const data = this.state.data.filter((item) => this.state.selectedRows.indexOf(item.id) === -1)\r\n        this.setState({ \"selectedRows\": [], data })\r\n      }\r\n      );\r\n  }\r\n\r\n  getCheckBox(id) {\r\n    if (this.state.selectedRows.indexOf(id) === -1) {\r\n      return (\r\n        <input className=\"form-check-input\" type=\"checkbox\" id={id}\r\n          onClick={(event) => this.handleTableCheck(id, event.target.checked)} />\r\n      )\r\n    }\r\n    return (\r\n      <input checked className=\"form-check-input\" type=\"checkbox\" id={id}\r\n        onClick={(event) => this.handleTableCheck(id, event.target.checked)} />\r\n    )\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const id = target.id;\r\n    let toAdd = this.state.toAdd\r\n    toAdd[id] = value\r\n    this.setState({\r\n      toAdd\r\n    });\r\n  }\r\n\r\n  handleEditInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const id = target.id;\r\n    let editObj = this.state.editObj\r\n    editObj[id] = value\r\n    this.setState({\r\n      editObj\r\n    });\r\n  }\r\n\r\n  handleSearchInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleUpdateItem() {\r\n    let editObj = this.state.editObj;\r\n    fetch('/management',\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ 'editObj': this.state.editObj, 'ids': this.state.selectedRows })\r\n      })\r\n      .then(res => {\r\n        let data = this.state.data;\r\n        data.forEach((item) => {\r\n          if (this.state.selectedRows.indexOf(item.id) !== -1) {\r\n            this.props.data.headers.forEach((key) => {\r\n              if (key.nameInDB !== 'id') {\r\n                item[key.nameInDB] = editObj[key.nameInDB];\r\n              }\r\n            });\r\n          }\r\n        })\r\n        this.setState({ show: false, editObj: {}, data, selectedRows: [] });\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n  handleAddItem() {\r\n    let toAdd = this.state.toAdd;\r\n    fetch('/management',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.state.toAdd)\r\n      })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        let data = this.state.data;\r\n        toAdd['id'] = json.id;\r\n        data.push(toAdd);\r\n        this.setState({ show: false, toAdd: {}, data });\r\n      }\r\n      );\r\n  }\r\n\r\n  openEditModal() {\r\n    if (this.state.selectedRows.length === 0)\r\n      return;\r\n    const firstSelectedRow = this.state.selectedRows[0];\r\n    let editObj;\r\n    this.state.data.forEach((item) => {\r\n      if (item.id === firstSelectedRow) {\r\n        editObj = item;\r\n      }\r\n    });\r\n    this.state.editObj = editObj;\r\n    return (\r\n      <Modal id=\"modal\"\r\n        show={this.state.showEdit}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton onHide={() => this.setState({ showEdit: false, selectedRows: [] })}>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Update\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {this.props.data.headers.map((item) => {\r\n            return (\r\n              <div class=\"form-group\" key={item.nameInDB}>\r\n                <label for={item.nameInDB}>{item.key}</label>\r\n                <input type={item.type} class=\"form-control\" id={item.nameInDB} placeholder={item.key} onChange={this.handleEditInputChange} value={this.state.editObj[item.nameInDB]} />\r\n              </div>\r\n            )\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() => this.handleUpdateItem()}>Update</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  openAddModal() {\r\n    return (\r\n      <Modal id=\"modal\"\r\n        {...this.state}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            הוספה\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {this.props.data.headers.map((item) => {\r\n            return (\r\n              <div class=\"form-group\" key={item.nameInDB}>\r\n                <label for={item.nameInDB}>{item.key}</label>\r\n                <input type={item.type} class=\"form-control\" id={item.nameInDB} placeholder={item.key} onChange={this.handleInputChange} />\r\n              </div>\r\n            )\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() => this.handleAddItem()}>הוספה</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  // toggleHover() {\r\n  //   this.setState({ hover: !this.state.hover })\r\n  // }\r\n\r\n  clearFilter() {\r\n    this.setState({ data: this.state.orgData });\r\n  }\r\n\r\n  filterData() {\r\n    const key = this.state.searchIn;\r\n    const text = this.state.search;\r\n    if (!key || !text) {\r\n      return;\r\n    }\r\n    const data = [];\r\n    this.state.orgData.forEach((item) => {\r\n      if (item[key].indexOf(text) !== -1) {\r\n        data.push(item);\r\n      }\r\n    });\r\n    this.setState({ data });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.data) {\r\n      this.setState({ data: this.props.data.data, orgData: this.props.data.data, searchIn: this.props.data.headers[0].nameInDB })\r\n      return (<h1>Loading...</h1>)\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <form class=\"form-inline\">\r\n            <input onChange={this.handleSearchInputChange} type=\"text\" name=\"search\" class=\"form-control mb-2 mr-sm-2\" placeholder=\"Search\" />\r\n            <select onChange={this.handleSearchInputChange} name=\"searchIn\" class=\"form-control mb-2 mr-sm-2\" id=\"exampleFormControlSelect1\">\r\n\r\n              {this.props.data.headers.map((item) => {\r\n                return (\r\n                  <option key={item.id} value={item.nameInDB}>{item.key}</option>\r\n                )\r\n              })}\r\n            </select>\r\n            <button type=\"button\" class=\"btn btn-primary mr-sm-2\" onClick={() => this.filterData()}>Search</button>\r\n            <button type=\"button\" class=\"btn btn-danger mr-sm-2\" onClick={() => this.clearFilter()}>Clear</button>\r\n          </form>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-danger table-button\" onClick={() => this.handleTableDelete()}>Delete</button>\r\n        <button type=\"button\" className=\"btn btn-primary table-button\" onClick={() => { this.setState({ showEdit: true }) }}>Edit</button>\r\n        <button type=\"button\" className=\"btn btn-success table-button\" onClick={() => { this.setState({ show: true }) }}>Add</button>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              {this.props.data.headers.map((item) => {\r\n                return (\r\n                  <th key={item.id}>{item.key}</th>\r\n                )\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.data.map((item) => {\r\n              return (\r\n                <tr key={item.id}>\r\n                  <td>\r\n                    <div className=\"form-check\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}>\r\n                      {/* <div className=\"form-text\">{item.id}</div> */}\r\n                      {this.getCheckBox(item.id)}\r\n                    </div>\r\n                  </td>\r\n                  {this.props.data.headers.map((header) => {\r\n                    return (\r\n                      <td>{item[header.nameInDB]}</td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n        {this.openAddModal()}\r\n        {this.openEditModal()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableVendor;\r\n"]},"metadata":{},"sourceType":"module"}